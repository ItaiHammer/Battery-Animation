{"version":3,"sources":["components/body.jsx","App.js","reportWebVitals.js","index.js"],"names":["Body","fill","useRef","useState","value","setValue","scale","setScale","slider","useEffect","current","style","background","error","console","log","className","div","onClick","setTimeout","animate","transition","duration","ref","initial","width","type","min","max","onMouseOver","cursor","onMouseDown","onMouseUp","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAMe,SAASA,IACpB,IAAMC,EAAOC,mBADe,EAEFC,mBAAS,KAFP,mBAErBC,EAFqB,KAEdC,EAFc,OAGFF,mBAAS,GAHP,mBAGrBG,EAHqB,KAGdC,EAHc,KAItBC,EAASN,mBAiCf,OA/BAO,qBAAU,WACN,GAAoB,MAAhBR,EAAKS,QACL,IAEQT,EAAKS,QAAQC,MAAMC,WADnBR,EAAQ,GACwB,UAEA,UAEvC,MAAOS,GACJC,QAAQC,IAAIF,MAGrB,CAACT,EAAOH,EAAKS,UAmBT,sBAAKM,UAAU,OAAf,UACH,eAAC,IAAOC,IAAR,CAAYD,UAAU,oBAAoBE,QAAS,WAAKX,EAAS,KAAMY,YAAW,kBAAIZ,EAAS,KAAI,MAAOa,QAAS,CAACd,MAAOA,GAAQe,WAAY,CAACC,SAAU,IAA1J,UACI,qBAAKN,UAAU,MAAf,SACI,cAAC,IAAOC,IAAR,CAAYM,IAAKtB,EAAMe,UAAU,WAAWQ,QAAS,CAACC,MAAM,MAAQL,QAAS,CAACK,MAAM,GAAD,OAAKrB,EAAL,MAAgBiB,WAAY,CAACC,SAAU,QAE9H,qBAAKN,UAAU,gBAEnB,uBAAOA,UAAU,SAASO,IAAKf,EAAQkB,KAAK,QAAQC,IAAI,IAAIC,IAAI,MAAMxB,MAAOA,EAAOyB,YAnBxF,WACIrB,EAAOE,QAAQC,MAAMmB,OAAS,QAkBgFC,YAflH,WACIvB,EAAOE,QAAQC,MAAMmB,OAAS,YAc0GE,UAX5I,WACIxB,EAAOE,QAAQC,MAAMmB,OAAS,QAUsIG,SAAU,SAACC,GAAK7B,EAAS6B,EAAEC,OAAO/B,UACtM,sBAAKY,UAAU,oBAAf,UACI,wBAAQE,QAAS,WAAKb,EAAS,IAA/B,gBACA,wBAAQa,QAAS,WAAKb,EAAS,MAA/B,wBC1CG+B,MANf,WACE,OAAO,mCACL,cAACpC,EAAD,OCKWqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9eb42e41.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport { motion } from \"framer-motion\"\r\n\r\n//files\r\nimport './body.css'\r\n\r\nexport default function Body () {\r\n    const fill = useRef();\r\n    const [value, setValue] = useState(100);\r\n    const [scale, setScale] = useState(1);\r\n    const slider = useRef();\r\n\r\n    useEffect(()=>{\r\n        if (fill.current != null) {\r\n            try {\r\n                if (value < 50) {\r\n                    fill.current.style.background = '#b15d5d';\r\n                }else {\r\n                    fill.current.style.background = '#5db16f';\r\n                }\r\n            }catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }, [value, fill.current]);\r\n\r\n    function battryClick () {\r\n        setScale(1.5);\r\n        setTimeout(setScale(1), 500);\r\n    }\r\n\r\n    function sliderHover () {\r\n        slider.current.style.cursor = 'grab'\r\n    }\r\n\r\n    function sliderClick () {\r\n        slider.current.style.cursor = 'grabbing'\r\n    }\r\n\r\n    function sliderStopClick () {\r\n        slider.current.style.cursor = 'grab'\r\n    }\r\n\r\n    return <div className=\"body\">\r\n        <motion.div className=\"battery-container\" onClick={()=>{setScale(1.1); setTimeout(()=>setScale(1), 200)}} animate={{scale: scale}} transition={{duration: 0.2}} >\r\n            <div className=\"box\" >\r\n                <motion.div ref={fill} className=\"box-fill\" initial={{width: `0%`}} animate={{width: `${value}%`}} transition={{duration: 0.5}} ></motion.div>\r\n            </div>\r\n            <div className=\"chupchik\"></div>\r\n        </motion.div>\r\n        <input className=\"slider\" ref={slider} type=\"range\" min=\"0\" max=\"100\" value={value} onMouseOver={sliderHover} onMouseDown={sliderClick} onMouseUp={sliderStopClick} onChange={(e)=>{setValue(e.target.value)}} ></input>\r\n        <div className=\"buttons-container\">\r\n            <button onClick={()=>{setValue(0)}} >0%</button>\r\n            <button onClick={()=>{setValue(100)}} >100%</button>\r\n        </div>\r\n    </div>\r\n}","import './App.css';\n\n//components\nimport Body from './components/body'\n\nfunction App() {\n  return <>\n    <Body/>\n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}